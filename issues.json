[

  {
    "url": "https://api.github.com/repos/kazuho/draft-kazuho-quic-authenticated-handshake/issues/14",
    "repository_url": "https://api.github.com/repos/kazuho/draft-kazuho-quic-authenticated-handshake",
    "labels_url": "https://api.github.com/repos/kazuho/draft-kazuho-quic-authenticated-handshake/issues/14/labels{/name}",
    "comments_url": "https://api.github.com/repos/kazuho/draft-kazuho-quic-authenticated-handshake/issues/14/comments",
    "events_url": "https://api.github.com/repos/kazuho/draft-kazuho-quic-authenticated-handshake/issues/14/events",
    "html_url": "https://github.com/kazuho/draft-kazuho-quic-authenticated-handshake/pull/14",
    "id": 461330021,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjkyMjc5Njcw",
    "number": 14,
    "title": "Update ref to tls-esi-03, add \"robustness\" support",
    "user": {
      "login": "kazuho",
      "id": 41567,
      "node_id": "MDQ6VXNlcjQxNTY3",
      "avatar_url": "https://avatars2.githubusercontent.com/u/41567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kazuho",
      "html_url": "https://github.com/kazuho",
      "followers_url": "https://api.github.com/users/kazuho/followers",
      "following_url": "https://api.github.com/users/kazuho/following{/other_user}",
      "gists_url": "https://api.github.com/users/kazuho/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kazuho/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kazuho/subscriptions",
      "organizations_url": "https://api.github.com/users/kazuho/orgs",
      "repos_url": "https://api.github.com/users/kazuho/repos",
      "events_url": "https://api.github.com/users/kazuho/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kazuho/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2019-06-27T05:59:15Z",
    "updated_at": "2019-06-27T05:59:28Z",
    "closed_at": null,
    "author_association": "OWNER",
    "pull_request": {
      "url": "https://api.github.com/repos/kazuho/draft-kazuho-quic-authenticated-handshake/pulls/14",
      "html_url": "https://github.com/kazuho/draft-kazuho-quic-authenticated-handshake/pull/14",
      "diff_url": "https://github.com/kazuho/draft-kazuho-quic-authenticated-handshake/pull/14.diff",
      "patch_url": "https://github.com/kazuho/draft-kazuho-quic-authenticated-handshake/pull/14.patch"
    },
    "body": "Now that https://github.com/tlswg/draft-ietf-tls-esni/pull/124 has been merged, QUIC-AH needs to provide a way to correct the ESNI Resource Record when the record possessed by the endpoints become out-of-sync.\r\n\r\nThis PR describes the fallback mechanism. In short, it works like follows:\r\n1. Client sends QUIC-AH Initial packet.\r\n2. A server failing to process the Initial sends VN specifying v1.\r\n3. Client sends V1 Initial containing CH with empty \"encrypted_server_name\" extension.\r\n4. Server either sends the ESNI record, or the lack of, in the way specified by ESNI.\r\n5. Client reattempts to create a connection.\r\n\r\nThe thing here is that we essentially need a non-authenticated ESNI handshake for obtaining the correct ESNI key (see step 3). At the moment, step 3 uses an empty \"encrypted_server_name\" extension because the purpose here is to purely obtain the correct ESNI record (or the lack of), but we can send an ordinary ESNI extension here too.\r\n\r\nThen, the question that become apparent is: should we define a mechanism to just run ESNI+version greasing (#13), and make \"authenticated handshake\" an optional feature?"
  },
  {
    "url": "https://api.github.com/repos/kazuho/draft-kazuho-quic-authenticated-handshake/issues/13",
    "repository_url": "https://api.github.com/repos/kazuho/draft-kazuho-quic-authenticated-handshake",
    "labels_url": "https://api.github.com/repos/kazuho/draft-kazuho-quic-authenticated-handshake/issues/13/labels{/name}",
    "comments_url": "https://api.github.com/repos/kazuho/draft-kazuho-quic-authenticated-handshake/issues/13/comments",
    "events_url": "https://api.github.com/repos/kazuho/draft-kazuho-quic-authenticated-handshake/issues/13/events",
    "html_url": "https://github.com/kazuho/draft-kazuho-quic-authenticated-handshake/pull/13",
    "id": 461307580,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjkyMjYyMTkx",
    "number": 13,
    "title": "Version number greasing",
    "user": {
      "login": "kazuho",
      "id": 41567,
      "node_id": "MDQ6VXNlcjQxNTY3",
      "avatar_url": "https://avatars2.githubusercontent.com/u/41567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kazuho",
      "html_url": "https://github.com/kazuho",
      "followers_url": "https://api.github.com/users/kazuho/followers",
      "following_url": "https://api.github.com/users/kazuho/following{/other_user}",
      "gists_url": "https://api.github.com/users/kazuho/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kazuho/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kazuho/subscriptions",
      "organizations_url": "https://api.github.com/users/kazuho/orgs",
      "repos_url": "https://api.github.com/users/kazuho/repos",
      "events_url": "https://api.github.com/users/kazuho/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kazuho/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2019-06-27T04:28:05Z",
    "updated_at": "2019-06-27T11:58:08Z",
    "closed_at": null,
    "author_association": "OWNER",
    "pull_request": {
      "url": "https://api.github.com/repos/kazuho/draft-kazuho-quic-authenticated-handshake/pulls/13",
      "html_url": "https://github.com/kazuho/draft-kazuho-quic-authenticated-handshake/pull/13",
      "diff_url": "https://github.com/kazuho/draft-kazuho-quic-authenticated-handshake/pull/13.diff",
      "patch_url": "https://github.com/kazuho/draft-kazuho-quic-authenticated-handshake/pull/13.patch"
    },
    "body": "Replaces QUIC_ESNI extension with QUIC_AH extension, that maps base versions to a list of wire versions that have no semantic meaning.\r\n\r\nIn case of QUIC-AH (which is the authenticated handshake flavor of QUIC v1), a base version of `1` would have a list of wire versions."
  },
  {
    "url": "https://api.github.com/repos/kazuho/draft-kazuho-quic-authenticated-handshake/issues/12",
    "repository_url": "https://api.github.com/repos/kazuho/draft-kazuho-quic-authenticated-handshake",
    "labels_url": "https://api.github.com/repos/kazuho/draft-kazuho-quic-authenticated-handshake/issues/12/labels{/name}",
    "comments_url": "https://api.github.com/repos/kazuho/draft-kazuho-quic-authenticated-handshake/issues/12/comments",
    "events_url": "https://api.github.com/repos/kazuho/draft-kazuho-quic-authenticated-handshake/issues/12/events",
    "html_url": "https://github.com/kazuho/draft-kazuho-quic-authenticated-handshake/pull/12",
    "id": 391926689,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjM5MzEyNzI0",
    "number": 12,
    "title": "Describe two attacks in security section.",
    "user": {
      "login": "huitema",
      "id": 7464128,
      "node_id": "MDQ6VXNlcjc0NjQxMjg=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/7464128?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/huitema",
      "html_url": "https://github.com/huitema",
      "followers_url": "https://api.github.com/users/huitema/followers",
      "following_url": "https://api.github.com/users/huitema/following{/other_user}",
      "gists_url": "https://api.github.com/users/huitema/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/huitema/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/huitema/subscriptions",
      "organizations_url": "https://api.github.com/users/huitema/orgs",
      "repos_url": "https://api.github.com/users/huitema/repos",
      "events_url": "https://api.github.com/users/huitema/events{/privacy}",
      "received_events_url": "https://api.github.com/users/huitema/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2018-12-17T23:03:04Z",
    "updated_at": "2018-12-19T06:46:21Z",
    "closed_at": "2018-12-19T04:59:04Z",
    "author_association": "COLLABORATOR",
    "pull_request": {
      "url": "https://api.github.com/repos/kazuho/draft-kazuho-quic-authenticated-handshake/pulls/12",
      "html_url": "https://github.com/kazuho/draft-kazuho-quic-authenticated-handshake/pull/12",
      "diff_url": "https://github.com/kazuho/draft-kazuho-quic-authenticated-handshake/pull/12.diff",
      "patch_url": "https://github.com/kazuho/draft-kazuho-quic-authenticated-handshake/pull/12.patch"
    },
    "body": "I wrote text describing the two residual attacks once HMAC protection is established. The first one is\r\nthe CID attack that EKR discussed, and the second one is the address substitution attack that we discussed in issue #7 "
  },
  {
    "url": "https://api.github.com/repos/kazuho/draft-kazuho-quic-authenticated-handshake/issues/11",
    "repository_url": "https://api.github.com/repos/kazuho/draft-kazuho-quic-authenticated-handshake",
    "labels_url": "https://api.github.com/repos/kazuho/draft-kazuho-quic-authenticated-handshake/issues/11/labels{/name}",
    "comments_url": "https://api.github.com/repos/kazuho/draft-kazuho-quic-authenticated-handshake/issues/11/comments",
    "events_url": "https://api.github.com/repos/kazuho/draft-kazuho-quic-authenticated-handshake/issues/11/events",
    "html_url": "https://github.com/kazuho/draft-kazuho-quic-authenticated-handshake/pull/11",
    "id": 391525981,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjM5MDA0Mjk3",
    "number": 11,
    "title": "rewrite split mode",
    "user": {
      "login": "kazuho",
      "id": 41567,
      "node_id": "MDQ6VXNlcjQxNTY3",
      "avatar_url": "https://avatars2.githubusercontent.com/u/41567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kazuho",
      "html_url": "https://github.com/kazuho",
      "followers_url": "https://api.github.com/users/kazuho/followers",
      "following_url": "https://api.github.com/users/kazuho/following{/other_user}",
      "gists_url": "https://api.github.com/users/kazuho/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kazuho/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kazuho/subscriptions",
      "organizations_url": "https://api.github.com/users/kazuho/orgs",
      "repos_url": "https://api.github.com/users/kazuho/repos",
      "events_url": "https://api.github.com/users/kazuho/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kazuho/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2018-12-17T01:10:54Z",
    "updated_at": "2019-06-27T06:07:25Z",
    "closed_at": null,
    "author_association": "OWNER",
    "pull_request": {
      "url": "https://api.github.com/repos/kazuho/draft-kazuho-quic-authenticated-handshake/pulls/11",
      "html_url": "https://github.com/kazuho/draft-kazuho-quic-authenticated-handshake/pull/11",
      "diff_url": "https://github.com/kazuho/draft-kazuho-quic-authenticated-handshake/pull/11.diff",
      "patch_url": "https://github.com/kazuho/draft-kazuho-quic-authenticated-handshake/pull/11.patch"
    },
    "body": "Current text implies that support for Split Mode in QUIC-AH is substantially complicated compared to doing that in TLS-ESNI.\r\n\r\nBut actually, draft-tls-esni-02 already requires coordination between the fronting server and the hidden server. QUIC-AH is just adding some properties to the coordination.\r\n\r\nThe updated text clarifies that."
  },
  {
    "url": "https://api.github.com/repos/kazuho/draft-kazuho-quic-authenticated-handshake/issues/10",
    "repository_url": "https://api.github.com/repos/kazuho/draft-kazuho-quic-authenticated-handshake",
    "labels_url": "https://api.github.com/repos/kazuho/draft-kazuho-quic-authenticated-handshake/issues/10/labels{/name}",
    "comments_url": "https://api.github.com/repos/kazuho/draft-kazuho-quic-authenticated-handshake/issues/10/comments",
    "events_url": "https://api.github.com/repos/kazuho/draft-kazuho-quic-authenticated-handshake/issues/10/events",
    "html_url": "https://github.com/kazuho/draft-kazuho-quic-authenticated-handshake/pull/10",
    "id": 391511053,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjM4OTk0MTg3",
    "number": 10,
    "title": "Initial packets are mapped to connections using (CID, 5-tuple)",
    "user": {
      "login": "kazuho",
      "id": 41567,
      "node_id": "MDQ6VXNlcjQxNTY3",
      "avatar_url": "https://avatars2.githubusercontent.com/u/41567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kazuho",
      "html_url": "https://github.com/kazuho",
      "followers_url": "https://api.github.com/users/kazuho/followers",
      "following_url": "https://api.github.com/users/kazuho/following{/other_user}",
      "gists_url": "https://api.github.com/users/kazuho/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kazuho/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kazuho/subscriptions",
      "organizations_url": "https://api.github.com/users/kazuho/orgs",
      "repos_url": "https://api.github.com/users/kazuho/repos",
      "events_url": "https://api.github.com/users/kazuho/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kazuho/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2018-12-16T22:18:29Z",
    "updated_at": "2018-12-19T05:00:11Z",
    "closed_at": "2018-12-19T05:00:11Z",
    "author_association": "OWNER",
    "pull_request": {
      "url": "https://api.github.com/repos/kazuho/draft-kazuho-quic-authenticated-handshake/pulls/10",
      "html_url": "https://github.com/kazuho/draft-kazuho-quic-authenticated-handshake/pull/10",
      "diff_url": "https://github.com/kazuho/draft-kazuho-quic-authenticated-handshake/pull/10.diff",
      "patch_url": "https://github.com/kazuho/draft-kazuho-quic-authenticated-handshake/pull/10.patch"
    },
    "body": "fixes #7."
  },
  {
    "url": "https://api.github.com/repos/kazuho/draft-kazuho-quic-authenticated-handshake/issues/9",
    "repository_url": "https://api.github.com/repos/kazuho/draft-kazuho-quic-authenticated-handshake",
    "labels_url": "https://api.github.com/repos/kazuho/draft-kazuho-quic-authenticated-handshake/issues/9/labels{/name}",
    "comments_url": "https://api.github.com/repos/kazuho/draft-kazuho-quic-authenticated-handshake/issues/9/comments",
    "events_url": "https://api.github.com/repos/kazuho/draft-kazuho-quic-authenticated-handshake/issues/9/events",
    "html_url": "https://github.com/kazuho/draft-kazuho-quic-authenticated-handshake/issues/9",
    "id": 391509079,
    "node_id": "MDU6SXNzdWUzOTE1MDkwNzk=",
    "number": 9,
    "title": "Why not also encrypt the Initial payload?",
    "user": {
      "login": "DavidSchinazi",
      "id": 5599133,
      "node_id": "MDQ6VXNlcjU1OTkxMzM=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/5599133?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DavidSchinazi",
      "html_url": "https://github.com/DavidSchinazi",
      "followers_url": "https://api.github.com/users/DavidSchinazi/followers",
      "following_url": "https://api.github.com/users/DavidSchinazi/following{/other_user}",
      "gists_url": "https://api.github.com/users/DavidSchinazi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DavidSchinazi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DavidSchinazi/subscriptions",
      "organizations_url": "https://api.github.com/users/DavidSchinazi/orgs",
      "repos_url": "https://api.github.com/users/DavidSchinazi/repos",
      "events_url": "https://api.github.com/users/DavidSchinazi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DavidSchinazi/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 3,
    "created_at": "2018-12-16T21:55:36Z",
    "updated_at": "2018-12-19T22:28:18Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "Hi @kazuho and @huitema, thanks for writing this! I was wondering, since this mechanism allows protecting the Initial payload, why not also to encrypt it?\r\n\r\nWe could write a separate KeyShareEntry (Named Group + Key Share) at the start of the payload and use that as the key to AES-GCM-128 to encrypt the payload. Header protection would use the traditional QUICv1 key and IV.\r\n\r\n```\r\n 0                   1                   2                   3\r\n 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\r\n+-+-+-+-+-+-+-+-+\r\n|1|1|0 0|R R|P P|\r\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\r\n|                         Version (32)                          |\r\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\r\n|DCIL(4)|SCIL(4)|\r\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\r\n|               Destination Connection ID (0/32..144)         ...\r\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\r\n|                 Source Connection ID (0/32..144)            ...\r\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\r\n|                           Length (i)                        ...\r\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\r\n|                    Packet Number (8/16/24/32)               ...\r\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\r\n|                         Named Group (16)                    ...\r\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\r\n|                         Key Share (*)                       ...\r\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\r\n|                          Payload (*)                        ...\r\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\r\n```"
  },
  {
    "url": "https://api.github.com/repos/kazuho/draft-kazuho-quic-authenticated-handshake/issues/8",
    "repository_url": "https://api.github.com/repos/kazuho/draft-kazuho-quic-authenticated-handshake",
    "labels_url": "https://api.github.com/repos/kazuho/draft-kazuho-quic-authenticated-handshake/issues/8/labels{/name}",
    "comments_url": "https://api.github.com/repos/kazuho/draft-kazuho-quic-authenticated-handshake/issues/8/comments",
    "events_url": "https://api.github.com/repos/kazuho/draft-kazuho-quic-authenticated-handshake/issues/8/events",
    "html_url": "https://github.com/kazuho/draft-kazuho-quic-authenticated-handshake/pull/8",
    "id": 391446465,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjM4OTUzMjM5",
    "number": 8,
    "title": "DCID = Hash(ClientHello)",
    "user": {
      "login": "kazuho",
      "id": 41567,
      "node_id": "MDQ6VXNlcjQxNTY3",
      "avatar_url": "https://avatars2.githubusercontent.com/u/41567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kazuho",
      "html_url": "https://github.com/kazuho",
      "followers_url": "https://api.github.com/users/kazuho/followers",
      "following_url": "https://api.github.com/users/kazuho/following{/other_user}",
      "gists_url": "https://api.github.com/users/kazuho/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kazuho/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kazuho/subscriptions",
      "organizations_url": "https://api.github.com/users/kazuho/orgs",
      "repos_url": "https://api.github.com/users/kazuho/repos",
      "events_url": "https://api.github.com/users/kazuho/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kazuho/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2018-12-16T08:35:26Z",
    "updated_at": "2018-12-17T22:27:08Z",
    "closed_at": "2018-12-17T22:23:54Z",
    "author_association": "OWNER",
    "pull_request": {
      "url": "https://api.github.com/repos/kazuho/draft-kazuho-quic-authenticated-handshake/pulls/8",
      "html_url": "https://github.com/kazuho/draft-kazuho-quic-authenticated-handshake/pull/8",
      "diff_url": "https://github.com/kazuho/draft-kazuho-quic-authenticated-handshake/pull/8.diff",
      "patch_url": "https://github.com/kazuho/draft-kazuho-quic-authenticated-handshake/pull/8.patch"
    },
    "body": "The change mitigates the attack described by @ekr; a MOTS attacker racing spoofed Initial packet carrying the same CIDs and different but valid ClientHello to create a colliding connection state on the server.\r\n\r\nIn addition, we require the client to continue using the same protection keys even when a Retry updates the server CID.  The server is expected to use the ODCID it retains (through the use of the token) to unprotect the payload. Note that the server is nevertheless expected to retain ODCID so that it can be included in EncryptedExtensions.TransportParameters.  The benefits of the approach are:\r\n* servers will automatically drop the Initial packets with invalid tokens due to not being able to unprotect the payload\r\n* no change to the Initial packet layout\r\n\r\nThe downside is that connection establishment would take longer time when packet loss _and_ Retry that updates the CID are involved. But that is a rare case so we might not need to care."
  },
  {
    "url": "https://api.github.com/repos/kazuho/draft-kazuho-quic-authenticated-handshake/issues/7",
    "repository_url": "https://api.github.com/repos/kazuho/draft-kazuho-quic-authenticated-handshake",
    "labels_url": "https://api.github.com/repos/kazuho/draft-kazuho-quic-authenticated-handshake/issues/7/labels{/name}",
    "comments_url": "https://api.github.com/repos/kazuho/draft-kazuho-quic-authenticated-handshake/issues/7/comments",
    "events_url": "https://api.github.com/repos/kazuho/draft-kazuho-quic-authenticated-handshake/issues/7/events",
    "html_url": "https://github.com/kazuho/draft-kazuho-quic-authenticated-handshake/issues/7",
    "id": 391435938,
    "node_id": "MDU6SXNzdWUzOTE0MzU5Mzg=",
    "number": 7,
    "title": "False address attack",
    "user": {
      "login": "huitema",
      "id": 7464128,
      "node_id": "MDQ6VXNlcjc0NjQxMjg=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/7464128?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/huitema",
      "html_url": "https://github.com/huitema",
      "followers_url": "https://api.github.com/users/huitema/followers",
      "following_url": "https://api.github.com/users/huitema/following{/other_user}",
      "gists_url": "https://api.github.com/users/huitema/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/huitema/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/huitema/subscriptions",
      "organizations_url": "https://api.github.com/users/huitema/orgs",
      "repos_url": "https://api.github.com/users/huitema/repos",
      "events_url": "https://api.github.com/users/huitema/events{/privacy}",
      "received_events_url": "https://api.github.com/users/huitema/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 9,
    "created_at": "2018-12-16T05:01:48Z",
    "updated_at": "2018-12-19T05:00:11Z",
    "closed_at": "2018-12-19T05:00:11Z",
    "author_association": "COLLABORATOR",
    "body": "Even if the messages are perfectly sealed and protected, the attacker can still play games by racing duplicates that use a different source address than the actual peer address. How do we protect against that?"
  },
  {
    "url": "https://api.github.com/repos/kazuho/draft-kazuho-quic-authenticated-handshake/issues/6",
    "repository_url": "https://api.github.com/repos/kazuho/draft-kazuho-quic-authenticated-handshake",
    "labels_url": "https://api.github.com/repos/kazuho/draft-kazuho-quic-authenticated-handshake/issues/6/labels{/name}",
    "comments_url": "https://api.github.com/repos/kazuho/draft-kazuho-quic-authenticated-handshake/issues/6/comments",
    "events_url": "https://api.github.com/repos/kazuho/draft-kazuho-quic-authenticated-handshake/issues/6/events",
    "html_url": "https://github.com/kazuho/draft-kazuho-quic-authenticated-handshake/issues/6",
    "id": 391435809,
    "node_id": "MDU6SXNzdWUzOTE0MzU4MDk=",
    "number": 6,
    "title": "Separate spec and discussion",
    "user": {
      "login": "huitema",
      "id": 7464128,
      "node_id": "MDQ6VXNlcjc0NjQxMjg=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/7464128?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/huitema",
      "html_url": "https://github.com/huitema",
      "followers_url": "https://api.github.com/users/huitema/followers",
      "following_url": "https://api.github.com/users/huitema/following{/other_user}",
      "gists_url": "https://api.github.com/users/huitema/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/huitema/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/huitema/subscriptions",
      "organizations_url": "https://api.github.com/users/huitema/orgs",
      "repos_url": "https://api.github.com/users/huitema/repos",
      "events_url": "https://api.github.com/users/huitema/events{/privacy}",
      "received_events_url": "https://api.github.com/users/huitema/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2018-12-16T04:59:48Z",
    "updated_at": "2018-12-20T04:03:22Z",
    "closed_at": "2018-12-20T04:03:21Z",
    "author_association": "COLLABORATOR",
    "body": "We may want to reuse EKR's email about threat model, and then explain how the design solves the various threats:\r\n\r\n_THREAT MODEL\r\nThis leads us directly to the question of the threat model. I assume\r\nthat we have what I termed a Class (3) attacker, which can inject\r\npackets and will always win the race but cannot delete packets.\r\nWith that, you get the following pattern:_\r\n```\r\nClient                  Attacker                Server\r\n\r\nCInitial ->\r\n                        CInitial' ->\r\n                        CInitial  ->\r\n                                           <- SInitial\r\n                        <- SInitial'\r\n                        <- SInitial\r\n\r\nCHandshake ->\r\n                        CHandshake ->\r\n```                    \r\n_Our objective is to have the handshake survive this treatment. In an\r\nideal world, we would cause the server and client to reject X' and\r\nprocess X but this isn't possible, with the design you suggest,\r\nbecause the attacker can always take CInitial, replace the CRYPTO\r\nframes with his own and then send it to the server, computing\r\na new MAC based on *his* Zx. Note that this won't necessarily have\r\nthe right ESNI but that doesn't matter, because it will have\r\nthe same [SC]CID, and so will cause cause CInitial to be discarded\r\nwhen it is received. As far as I can tell, your current design\r\ndoes not prevent this. If I'm missing something here, let me\r\nknow [0]_\r\n"
  },
  {
    "url": "https://api.github.com/repos/kazuho/draft-kazuho-quic-authenticated-handshake/issues/5",
    "repository_url": "https://api.github.com/repos/kazuho/draft-kazuho-quic-authenticated-handshake",
    "labels_url": "https://api.github.com/repos/kazuho/draft-kazuho-quic-authenticated-handshake/issues/5/labels{/name}",
    "comments_url": "https://api.github.com/repos/kazuho/draft-kazuho-quic-authenticated-handshake/issues/5/comments",
    "events_url": "https://api.github.com/repos/kazuho/draft-kazuho-quic-authenticated-handshake/issues/5/events",
    "html_url": "https://github.com/kazuho/draft-kazuho-quic-authenticated-handshake/issues/5",
    "id": 391435605,
    "node_id": "MDU6SXNzdWUzOTE0MzU2MDU=",
    "number": 5,
    "title": "Define the data inherited from ESNI",
    "user": {
      "login": "huitema",
      "id": 7464128,
      "node_id": "MDQ6VXNlcjc0NjQxMjg=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/7464128?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/huitema",
      "html_url": "https://github.com/huitema",
      "followers_url": "https://api.github.com/users/huitema/followers",
      "following_url": "https://api.github.com/users/huitema/following{/other_user}",
      "gists_url": "https://api.github.com/users/huitema/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/huitema/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/huitema/subscriptions",
      "organizations_url": "https://api.github.com/users/huitema/orgs",
      "repos_url": "https://api.github.com/users/huitema/repos",
      "events_url": "https://api.github.com/users/huitema/events{/privacy}",
      "received_events_url": "https://api.github.com/users/huitema/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2018-12-16T04:55:33Z",
    "updated_at": "2018-12-16T09:14:09Z",
    "closed_at": null,
    "author_association": "COLLABORATOR",
    "body": "The definition of the HMAC key derivation is unclear. We need to make it much simpler. Also, we want to incorporate the ICID."
  },
  {
    "url": "https://api.github.com/repos/kazuho/draft-kazuho-quic-authenticated-handshake/issues/4",
    "repository_url": "https://api.github.com/repos/kazuho/draft-kazuho-quic-authenticated-handshake",
    "labels_url": "https://api.github.com/repos/kazuho/draft-kazuho-quic-authenticated-handshake/issues/4/labels{/name}",
    "comments_url": "https://api.github.com/repos/kazuho/draft-kazuho-quic-authenticated-handshake/issues/4/comments",
    "events_url": "https://api.github.com/repos/kazuho/draft-kazuho-quic-authenticated-handshake/issues/4/events",
    "html_url": "https://github.com/kazuho/draft-kazuho-quic-authenticated-handshake/issues/4",
    "id": 391435538,
    "node_id": "MDU6SXNzdWUzOTE0MzU1Mzg=",
    "number": 4,
    "title": "Initial CID should be defined as Hash(Initial)",
    "user": {
      "login": "huitema",
      "id": 7464128,
      "node_id": "MDQ6VXNlcjc0NjQxMjg=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/7464128?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/huitema",
      "html_url": "https://github.com/huitema",
      "followers_url": "https://api.github.com/users/huitema/followers",
      "following_url": "https://api.github.com/users/huitema/following{/other_user}",
      "gists_url": "https://api.github.com/users/huitema/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/huitema/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/huitema/subscriptions",
      "organizations_url": "https://api.github.com/users/huitema/orgs",
      "repos_url": "https://api.github.com/users/huitema/repos",
      "events_url": "https://api.github.com/users/huitema/events{/privacy}",
      "received_events_url": "https://api.github.com/users/huitema/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2018-12-16T04:54:04Z",
    "updated_at": "2018-12-17T22:28:41Z",
    "closed_at": "2018-12-17T22:28:41Z",
    "author_association": "COLLABORATOR",
    "body": "Based on discussion in mailing list. This will guarantee that there is exactly one Server Connection per ICID, which will simplify server defense a lot."
  },
  {
    "url": "https://api.github.com/repos/kazuho/draft-kazuho-quic-authenticated-handshake/issues/3",
    "repository_url": "https://api.github.com/repos/kazuho/draft-kazuho-quic-authenticated-handshake",
    "labels_url": "https://api.github.com/repos/kazuho/draft-kazuho-quic-authenticated-handshake/issues/3/labels{/name}",
    "comments_url": "https://api.github.com/repos/kazuho/draft-kazuho-quic-authenticated-handshake/issues/3/comments",
    "events_url": "https://api.github.com/repos/kazuho/draft-kazuho-quic-authenticated-handshake/issues/3/events",
    "html_url": "https://github.com/kazuho/draft-kazuho-quic-authenticated-handshake/issues/3",
    "id": 390962053,
    "node_id": "MDU6SXNzdWUzOTA5NjIwNTM=",
    "number": 3,
    "title": "Discuss MITM boxes",
    "user": {
      "login": "kazuho",
      "id": 41567,
      "node_id": "MDQ6VXNlcjQxNTY3",
      "avatar_url": "https://avatars2.githubusercontent.com/u/41567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kazuho",
      "html_url": "https://github.com/kazuho",
      "followers_url": "https://api.github.com/users/kazuho/followers",
      "following_url": "https://api.github.com/users/kazuho/following{/other_user}",
      "gists_url": "https://api.github.com/users/kazuho/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kazuho/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kazuho/subscriptions",
      "organizations_url": "https://api.github.com/users/kazuho/orgs",
      "repos_url": "https://api.github.com/users/kazuho/repos",
      "events_url": "https://api.github.com/users/kazuho/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kazuho/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2018-12-14T04:33:03Z",
    "updated_at": "2018-12-14T04:33:03Z",
    "closed_at": null,
    "author_association": "OWNER",
    "body": "@davidben points out that the draft is silent about MITM boxes even though [the ESNI draft has a section](https://tools.ietf.org/html/draft-ietf-tls-esni-02#section-6.2) that discusses how to detect them and accept downgrade.\r\n\r\nBasically, we have two options:\r\n* Hard-fail when the packets are touched by MITM. IMO this is a feasible option for us, because at the moment there are no MITM boxes that terminate QUIC traffic.\r\n* Accept Version Negotiation packet after seeing no other response from the server for certain amount of time.\r\n\r\nMy preference goes to the former, however what we would settle in might depend on how ESNI evolves."
  },
  {
    "url": "https://api.github.com/repos/kazuho/draft-kazuho-quic-authenticated-handshake/issues/2",
    "repository_url": "https://api.github.com/repos/kazuho/draft-kazuho-quic-authenticated-handshake",
    "labels_url": "https://api.github.com/repos/kazuho/draft-kazuho-quic-authenticated-handshake/issues/2/labels{/name}",
    "comments_url": "https://api.github.com/repos/kazuho/draft-kazuho-quic-authenticated-handshake/issues/2/comments",
    "events_url": "https://api.github.com/repos/kazuho/draft-kazuho-quic-authenticated-handshake/issues/2/events",
    "html_url": "https://github.com/kazuho/draft-kazuho-quic-authenticated-handshake/issues/2",
    "id": 388367720,
    "node_id": "MDU6SXNzdWUzODgzNjc3MjA=",
    "number": 2,
    "title": "Can the hidden server access the ESNI private key?",
    "user": {
      "login": "huitema",
      "id": 7464128,
      "node_id": "MDQ6VXNlcjc0NjQxMjg=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/7464128?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/huitema",
      "html_url": "https://github.com/huitema",
      "followers_url": "https://api.github.com/users/huitema/followers",
      "following_url": "https://api.github.com/users/huitema/following{/other_user}",
      "gists_url": "https://api.github.com/users/huitema/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/huitema/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/huitema/subscriptions",
      "organizations_url": "https://api.github.com/users/huitema/orgs",
      "repos_url": "https://api.github.com/users/huitema/repos",
      "events_url": "https://api.github.com/users/huitema/events{/privacy}",
      "received_events_url": "https://api.github.com/users/huitema/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 9,
    "created_at": "2018-12-06T19:41:59Z",
    "updated_at": "2018-12-19T05:07:17Z",
    "closed_at": "2018-12-19T05:07:17Z",
    "author_association": "COLLABORATOR",
    "body": "The ESNI procedure involve the client, the fronting server and the hidden server. The client gets the ESNI public key, and uses it to encrypt the \"real SNI\". The fronting server decrypts the ESNI using the corresponding private key, obtains the \"real SNI\", and forwards the connection to the hidden server. There is no need for the hidden server to know the private ESNI key. If there was such a need, all services that share the fronting server would need to know the key, which would greatly increase the risks of leak.\r\n\r\nThe spec computes the AAD as:\r\n```\r\n   initial_auth_secret = HKDF-Expand-Label(Zx, \"quic initial auth\",\r\n                                           Hash(ESNIContents), 16)\r\n```\r\nThis requires access to the ESNI content. This is not a problem for the client because it chose that content, but it is not obvious for the hidden server, which does not have access to the ESNI private key. How is that supposed to work?\r\n"
  },
  {
    "url": "https://api.github.com/repos/kazuho/draft-kazuho-quic-authenticated-handshake/issues/1",
    "repository_url": "https://api.github.com/repos/kazuho/draft-kazuho-quic-authenticated-handshake",
    "labels_url": "https://api.github.com/repos/kazuho/draft-kazuho-quic-authenticated-handshake/issues/1/labels{/name}",
    "comments_url": "https://api.github.com/repos/kazuho/draft-kazuho-quic-authenticated-handshake/issues/1/comments",
    "events_url": "https://api.github.com/repos/kazuho/draft-kazuho-quic-authenticated-handshake/issues/1/events",
    "html_url": "https://github.com/kazuho/draft-kazuho-quic-authenticated-handshake/issues/1",
    "id": 388314394,
    "node_id": "MDU6SXNzdWUzODgzMTQzOTQ=",
    "number": 1,
    "title": "AEAD or special frame?",
    "user": {
      "login": "huitema",
      "id": 7464128,
      "node_id": "MDQ6VXNlcjc0NjQxMjg=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/7464128?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/huitema",
      "html_url": "https://github.com/huitema",
      "followers_url": "https://api.github.com/users/huitema/followers",
      "following_url": "https://api.github.com/users/huitema/following{/other_user}",
      "gists_url": "https://api.github.com/users/huitema/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/huitema/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/huitema/subscriptions",
      "organizations_url": "https://api.github.com/users/huitema/orgs",
      "repos_url": "https://api.github.com/users/huitema/repos",
      "events_url": "https://api.github.com/users/huitema/events{/privacy}",
      "received_events_url": "https://api.github.com/users/huitema/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 9,
    "created_at": "2018-12-06T17:18:11Z",
    "updated_at": "2018-12-19T05:21:55Z",
    "closed_at": "2018-12-19T05:21:55Z",
    "author_association": "COLLABORATOR",
    "body": "You propose to use the ESNI secret as input to the key generation for the \"Initial\" context. This is a significant departure from standard QUIC, and I am concerned that we have a circular dependency. Servers can only assess the ESNI content after receiving the Initial content, but receiving it requires decrypting the data. My implementation uses a standard call to the AEAD library for that. The ESNI content is not known at the time of the AEAD call, and the AEAD checksum is going to not verify.\r\n\r\nThere are several ways out of that, but I think the simplest way is to add some kind of ESNI proof in a the server response. I don't think it can be sent as a TLS extension, because in server's first flight the extension are encrypted. QUIC will send them as handshake packets, which means they cannot be used to protect the Initial packet. The simplest solution is probably to invent an \"ESNI proof\" frame, that should be conveyed in the Initial packet if the ESNI extension is accepted. "
  }

]
